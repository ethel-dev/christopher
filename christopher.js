// Generated by CoffeeScript 1.10.0
var christopher;

christopher = {
  to: {
    base: function(input, base, opts) {
      var i, inputArray, items, j, len, outputString;
      if (isNaN(input) !== true) {
        if (typeof input === "string") {
          if (opts != null ? opts.startBase : void 0) {
            return parseInt(input, opts.startBase).toString(base);
          } else {
            return parseInt(input, 10).toString(base);
          }
        } else {
          return input.toString(base);
        }
      } else {
        inputArray = input.split("");
        outputString = "";
        for (i = j = 0, len = inputArray.length; j < len; i = ++j) {
          items = inputArray[i];
          outputString += items.charCodeAt(0).toString(base);
          if (i !== inputArray.length - 1 && (opts != null ? opts.spacing : void 0) !== false) {
            outputString += " ";
          }
        }
        return outputString;
      }
    },
    morse: function(input) {
      var i, inputArray, item, j, len, morse, outputString;
      morse = {
        "a": ".-",
        "b": "-...",
        "c": "-.-.",
        "d": "-..",
        "e": ".",
        "f": "..-.",
        "g": "--.",
        "h": "....",
        "i": "..",
        "j": ".---",
        "k": "-.-",
        "l": ".-..",
        "m": "--",
        "n": "-.",
        "o": "---",
        "p": ".--.",
        "q": "--.-",
        "r": ".-.",
        "s": "...",
        "t": "-",
        "u": "..-",
        "v": "...-",
        "w": ".--",
        "x": "-..-",
        "y": "-.--",
        "z": "--..",
        "0": "-----",
        "1": ".----",
        "2": "..---",
        "3": "...--",
        "4": "....-",
        "5": ".....",
        "6": "-....",
        "7": "--...",
        "8": "---..",
        "9": "----.",
        ".": ".-.-.-",
        ",": "--..--",
        ":": "---...",
        "?": "..--..",
        "'": ".----.",
        "-": "-....-",
        "/": "-..-.",
        "\"": ".-..-.",
        "@": ".--.-.",
        "=": "-...-",
        " ": "/"
      };
      inputArray = input.split("");
      outputString = "";
      for (i = j = 0, len = inputArray.length; j < len; i = ++j) {
        item = inputArray[i];
        outputString += (function() {
          if (morse[item]) {
            return morse[item];
          } else {
            throw new Error("Character not translatable to Morse code: " + item);
          }
        })();
        if (i !== inputArray.length - 1) {
          outputString += " ";
        }
      }
      return outputString;
    },
    nato: function(input) {
      var i, inputArray, item, j, len, nato, outputString;
      nato = {
        "a": "Alpha",
        "b": "Bravo",
        "c": "Charlie",
        "d": "Delta",
        "e": "Echo",
        "f": "Foxtrot",
        "g": "Golf",
        "h": "Hotel",
        "i": "India",
        "j": "Juliet",
        "k": "Kilo",
        "l": "Lima",
        "m": "Mike",
        "n": "November",
        "o": "Oscar",
        "p": "Papa",
        "q": "Quebec",
        "r": "Romeo",
        "s": "Sierra",
        "t": "Tango",
        "u": "Uniform",
        "v": "Victor",
        "w": "Whiskey",
        "x": "X-ray",
        "y": "Yankee",
        "z": "Zulu",
        "1": "One",
        "2": "Two",
        "3": "Three",
        "4": "Four",
        "5": "Five",
        "6": "Six",
        "7": "Seven",
        "8": "Eight",
        "9": "Nine",
        "0": "Zero",
        " ": "/"
      };
      inputArray = input.split("");
      outputString = "";
      for (i = j = 0, len = inputArray.length; j < len; i = ++j) {
        item = inputArray[i];
        outputString += nato[item] ? nato[item] : item;
        if (i !== inputArray.length - 1 && nato[item]) {
          outputString += " ";
        }
      }
      return outputString;
    },
    caesar: function(input, shift) {
      return input.replace(/([a-z|A-Z])/g, function($1) {
        var char;
        char = $1.charCodeAt(0);
        return String.fromCharCode(char >= 97 ? (char + shift + 26 - 97) % 26 + 97 : (char + shift + 26 - 65) % 26 + 65);
      });
    }
  },
  from: {
    base: function(input, base) {
      var inputString, items, j, len, outputArray;
      if (/\s/g.test(input) !== true) {
        console.log("Currently, spacing should be enabled/included to translate strings of encoded text. Your decode probably won't work without spacing. Unless, of course, you're only translating one character or something.");
        return outputArray = String.fromCharCode(parseInt(input, base));
      } else if (isNaN(input) !== true || typeof input !== "string") {
        return input.toString(base);
      } else {
        outputArray = input.split(" ");
        inputString = "";
        for (j = 0, len = outputArray.length; j < len; j++) {
          items = outputArray[j];
          inputString += String.fromCharCode(parseInt(items, base));
        }
        return inputString;
      }
    },
    morse: function(input) {
      var inputString, item, j, len, morse, outputArray;
      morse = {
        "-----": "0",
        ".----": "1",
        "..---": "2",
        "...--": "3",
        "....-": "4",
        ".....": "5",
        "-....": "6",
        "--...": "7",
        "---..": "8",
        "----.": "9",
        ".-": "a",
        "-...": "b",
        "-.-.": "c",
        "-..": "d",
        ".": "e",
        "..-.": "f",
        "--.": "g",
        "....": "h",
        "..": "i",
        ".---": "j",
        "-.-": "k",
        ".-..": "l",
        "--": "m",
        "-.": "n",
        "---": "o",
        ".--.": "p",
        "--.-": "q",
        ".-.": "r",
        "...": "s",
        "-": "t",
        "..-": "u",
        "...-": "v",
        ".--": "w",
        "-..-": "x",
        "-.--": "y",
        "--..": "z",
        ".-.-.-": ".",
        "--..--": ",",
        "---...": ":",
        "..--..": "?",
        ".----.": "'",
        "-....-": "-",
        "-..-.": "/",
        ".-..-.": "\"",
        ".--.-.": "@",
        "-...-": "=",
        "/": " "
      };
      outputArray = input.split(" ");
      inputString = "";
      for (j = 0, len = outputArray.length; j < len; j++) {
        item = outputArray[j];
        inputString += (function() {
          if (morse[item]) {
            return morse[item];
          } else {
            throw new Error("Character not translatable to Morse code: " + item);
          }
        })();
      }
      return inputString;
    },
    nato: function(input) {
      var inputString, item, j, len, nato, outputArray;
      nato = {
        "Zero": "0",
        "One": "1",
        "Two": "2",
        "Three": "3",
        "Four": "4",
        "Five": "5",
        "Six": "6",
        "Seven": "7",
        "Eight": "8",
        "Nine": "9",
        "Alpha": "a",
        "Bravo": "b",
        "Charlie": "c",
        "Delta": "d",
        "Echo": "e",
        "Foxtrot": "f",
        "Golf": "g",
        "Hotel": "h",
        "India": "i",
        "Juliet": "j",
        "Kilo": "k",
        "Lima": "l",
        "Mike": "m",
        "November": "n",
        "Oscar": "o",
        "Papa": "p",
        "Quebec": "q",
        "Romeo": "r",
        "Sierra": "s",
        "Tango": "t",
        "Uniform": "u",
        "Victor": "v",
        "Whiskey": "w",
        "X-ray": "x",
        "Yankee": "y",
        "Zulu": "z",
        "/": " "
      };
      outputArray = input.split(" ");
      inputString = "";
      for (j = 0, len = outputArray.length; j < len; j++) {
        item = outputArray[j];
        inputString += nato[item] ? nato[item] : item;
      }
      return inputString;
    },
    caesar: function(input, shift) {
      var rot;
      if (Math.sign(shift) === 1) {
        rot = Math.abs(shift) * -1;
      } else if (Math.sign(shift) === -1) {
        rot = Math.abs(shift);
      } else {
        rot = shift;
      }
      return input.replace(/([a-z|A-Z])/g, function($1) {
        var char;
        char = $1.charCodeAt(0);
        return String.fromCharCode(char >= 97 ? (char + rot + 26 - 97) % 26 + 97 : (char + rot + 26 - 65) % 26 + 65);
      });
    }
  }
};
