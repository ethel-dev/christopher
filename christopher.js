// Generated by CoffeeScript 1.10.0
var christopher;

christopher = {
  to: {
    base: function(input, base, opts) {
      var i, inputArray, items, j, len, outputString;
      if (isNaN(input) !== true) {
        if (typeof input === "string") {
          if (opts != null ? opts.startBase : void 0) {
            return parseInt(input, opts.startBase).toString(base);
          } else {
            return parseInt(input, 10).toString(base);
          }
        } else {
          return input.toString(base);
        }
      } else {
        inputArray = input.split("");
        outputString = "";
        for (i = j = 0, len = inputArray.length; j < len; i = ++j) {
          items = inputArray[i];
          outputString += items.charCodeAt(0).toString(base);
          if (i !== inputArray.length - 1 && (opts != null ? opts.spacing : void 0) !== false) {
            outputString += " ";
            console.log("spacing for " + items);
          }
        }
        return outputString;
      }
    },
    morse: function(input) {
      var inputArray, item, j, len, morse, outputString;
      morse = {
        "a": ".-",
        "b": "-...",
        "c": "-.-.",
        "d": "-..",
        "e": ".",
        "f": "..-.",
        "g": "--.",
        "h": "....",
        "i": "..",
        "j": ".---",
        "k": "-.-",
        "l": ".-..",
        "m": "--",
        "n": "-.",
        "o": "---",
        "p": ".--.",
        "q": "--.-",
        "r": ".-.",
        "s": "...",
        "t": "-",
        "u": "..-",
        "v": "...-",
        "w": ".--",
        "x": "-..-",
        "y": "-.--",
        "z": "--..",
        "0": "-----",
        "1": ".----",
        "2": "..---",
        "3": "...--",
        "4": "....-",
        "5": ".....",
        "6": "-....",
        "7": "--...",
        "8": "---..",
        "9": "----.",
        ".": ".-.-.-",
        ",": "--..--",
        ":": "---...",
        "?": "..--..",
        "'": ".----.",
        "-": "-....-",
        "/": "-..-.",
        "\"": ".-..-.",
        "@": ".--.-.",
        "=": "-...-",
        " ": "/"
      };
      inputArray = input.split("");
      outputString = "";
      for (j = 0, len = inputArray.length; j < len; j++) {
        item = inputArray[j];
        outputString += (function() {
          if (morse[item]) {
            return morse[item];
          } else {
            throw new Error("Character not translatable to Morse: " + item);
          }
        })();
        if (item !== inputArray[inputArray.length - 1]) {
          outputString += " ";
        }
      }
      return outputString;
    }
  },
  from: {
    base: function(input, base) {
      var inputString, items, j, len, outputArray;
      if (/\s/g.test(input) !== true) {
        console.log("Currently, spacing should be enabled/included to translate strings of encoded text. Your decode probably won't work without spacing. Unless, of course, you're only translating one character or something.");
        return outputArray = String.fromCharCode(parseInt(input, base));
      } else if (isNaN(input) !== true || typeof input !== "string") {
        return input.toString(base);
      } else {
        outputArray = input.split(" ");
        inputString = "";
        for (j = 0, len = outputArray.length; j < len; j++) {
          items = outputArray[j];
          inputString += String.fromCharCode(parseInt(items, base));
        }
        return inputString;
      }
    },
    morse: function(input) {
      var inputString, item, j, len, morse, outputArray;
      morse = {
        "-----": "0",
        ".----": "1",
        "..---": "2",
        "...--": "3",
        "....-": "4",
        ".....": "5",
        "-....": "6",
        "--...": "7",
        "---..": "8",
        "----.": "9",
        ".-": "a",
        "-...": "b",
        "-.-.": "c",
        "-..": "d",
        ".": "e",
        "..-.": "f",
        "--.": "g",
        "....": "h",
        "..": "i",
        ".---": "j",
        "-.-": "k",
        ".-..": "l",
        "--": "m",
        "-.": "n",
        "---": "o",
        ".--.": "p",
        "--.-": "q",
        ".-.": "r",
        "...": "s",
        "-": "t",
        "..-": "u",
        "...-": "v",
        ".--": "w",
        "-..-": "x",
        "-.--": "y",
        "--..": "z",
        ".-.-.-": ".",
        "--..--": ",",
        "---...": ":",
        "..--..": "?",
        ".----.": "'",
        "-....-": "-",
        "-..-.": "/",
        ".-..-.": "\"",
        ".--.-.": "@",
        "-...-": "=",
        "/": " "
      };
      outputArray = input.split(" ");
      inputString = "";
      for (j = 0, len = outputArray.length; j < len; j++) {
        item = outputArray[j];
        inputString += (function() {
          if (morse[item]) {
            return morse[item];
          } else {
            throw new Error("Character/phrase not translatable from Morse: " + item);
          }
        })();
      }
      return inputString;
    }
  }
};
